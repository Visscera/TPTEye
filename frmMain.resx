<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="txtOutput.Text" xml:space="preserve">
    <value>BIZR/G/S, BRAY, FILT, and PHOT particles store their wavelengths in the ctype field. Wavelengths are just 30 bit numbers that are stored in the ctype of a particle. 
FILT uses the ctype field to store wavelengths too, however, if the ctype is 0, wavelengths will be calculated from its temperature instead: it will slowly shift towards blue when cold, and to red when hot. Technically, a group of 5 bits is set, and starting from 0°C, every 40°C the group is red-shifted by 1, and after 25 shifts, at 1000°C, the group is shifted to largest bits in the red part of the spectrum. 


FILT has many operation modes determined by its tmp property:

    0. "set colour" mode: FILT's spectrum is copied into PHOT particles that pass through it
    1. "and" mode: A bitwise and is performed on PHOT's and FILT's spectrums and the result is stored in the PHOT particle, any wavelengths not present in FILT will be removed from PHOT.
    2. "or" mode: Performs a bitwise or: all wavelengths present in FILT are "enabled" in PHOT, if not already.
    3. "subtract colour" mode: Performs a bitwise and-not: all wavelengths present in FILT are subtracted from PHOT.
    4. "red shift" mode: The wavelengths of a photon are red-shifted. The distance of the shift is calculated from the temperature only: the ctype value of the FILT is ignored..
    5. "blue shift" mode: Like "red shift", but the shifting direction is opposite, wavelengths are moved towards the blue end.
    6. "no effect" mode: No spectrum changes are performed. Useful if you want to cross beams of PHOT and ARAY without mangling the spectrum
    7. "xor" mode: Performs a bitwise xor: all wavelengths present in FILT are "flipped" in PHOT's spectrum, that is, if some color was on, it turns off, and vice versa.
    8. "not" mode: Performs a bitwise not: all wavelengths of PHOT are flipped. Note that FILT's spectrum is ignored.
    9. " QRTZ scattering" mode: Randomizes photons' velocity and randomly changes their color, just like QRTZ in old versions of The Powder Toy.
    10. "variable red shift" mode: Shift bits toward the red side by how many bits are to the right of the least significant bit.
    11. "variable blue shift" mode: Same as "variable red shift" but shifts towards the blue side of the spectrum instead.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8AAAAAAgAAAAIAAAAGAAAACwAAAA0AAAANAAAADQAAAA0AAAANAAAADQAA
        AA0AAAANAAAADQAAAA0AAAANAAAADQAAAA0AAAANAAAADQAAAA0AAAANAAAADQAAAA0AAAANAAAADQAA
        AA0AAAANAAAADQAAAA0AAAANAAAACwAAAAYAAAAGAAAABgAAABYAAAAjAAAAJgAAACYAAAAmAAAAJgAA
        ACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAA
        ACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAjAAAAFgAAAAuLhoSBhYF+94iEgf+IhIH/iISB/4iE
        gf+IhIH/iISB/4iEgf+IhIH/iISB/4iEgf+IhIH/iISB/4iEgf+IhIH/ioaD/4yJhv+PjIn/j4qH/4uH
        hf+IhIL/iISB/4iEgf+IhIH/iISB/4iEgf+IhIH/iISB/3l1c5QAAAAjAAAADYiEgf8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/iISB/wAAACYAAAANiISB/wAA
        AP////7/AAAA/////v8AAAD////+/////v////7////+/////v8AAAD////+/////v////7////+////
        /v8AAAD////+/wAAAP////7////+/////v////7/AAAA/////v8AAAD////+/wAAAP+IhIH/AAAAJgAA
        AA2IhIH/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/4iE
        gf8AAAAmAAAADYiEgf8ALf//AGj//wCj//8A3///AP/j/wD/qP8B/23/AP8y/xn/AP9V/wD/j/8A/8v/
        AP//9wD//7wA//+BAP//RQD//wkA//8AQP//AHz//wC3//8A8v/QAP//lQD//1kA//8eAP//AAAA/wAA
        AP8AAAD/iISB/wAAACYAAAANiISB/wAt//8AaP//AKP//wDe//8A/+P/AP+p/wD/bf8A/zH/Cv8A/1T/
        AP+P/wD/y/8A///3AP//vQD//4EA//9FAP//CgD//wAy//8AfP//ALf//wDy/9AA//+VAP//WQD//x4B
        //8AAAD//////wAAAP+IhIH/AAAAJgAAAA2IhIH/ACz//wBo//8Bo///AN///wD/5P8A/6j/AP9t/wD/
        Mf8K/wD/Rf8A/5D/AP/L/wD///gA//+8AP//gQD//0YA//8KAP//ADH//wBt//8AuP//APP/0AD//5UA
        //9ZAP//HgD//wAAAP8AAAD/AAAA/4iEgf8AAAAmAAAADYiEgf8AHf//AGj//wCk//8A3///AP/k/wD/
        qf8A/23/AP8x/wr/AP9G/wD/gP8A/8v/AP//+AD//7wA//+BAP//RQD//woA//8AMv//AG3//wCo//8A
        8//QAP//lQD//1kA//8dAP//AAAA/wAAAP8AAAD/iISB/wAAACYAAAANiISB/wAd//8AWf//AKT//wDf
        //8A/+T/AP+o/wD/bf8A/zH/Cv8A/0X/AP+B/wD/y/8A///4AP//vAD//4AA//9GAP//CgD//wAy//8A
        bf//AKn//wDk/9AA//+VAP//WgD//x0A//8AAAD/AAAA/wAAAP+IhIH/AAAAJgAAAA2IhIH/AB7//wBZ
        //8Alf//AN///wD/5P8A/6j/AP9t/wD/Mf8K/wD/Rf8A/4H/AP+8/wD///gA//+9AP//gAD//0UA//8K
        AP//ADH//wBt//8AqP//AOP/3wD//5QA//9ZAP//HQD//wAAAP//////AAAA/4iEgf8AAAAmAAAADYiE
        gf8AHv//AFn//wCU//8A0P//AP/k/wD/qP8A/23/AP8x/wr/AP9G/wD/gP8A/73/AP/4/wD//70A//+A
        AP//RQD//woA//8AMf//AG3//wCo//8A4//fAP//pAD//1kA//8eAP//AAAA/wAAAP8AAAD/iISB/wAA
        ACYAAAANiISB/wAe//8AWf//AJX//wDQ//8A//P/AP+o/wD/bf8A/zH/Cv8A/0b/AP+B/wD/vP8A//f/
        AP//ywD//4EA//9FAP//CgD//wAx//8Abf//AKj//wDk/98A//+jAP//aAD//x4A//8AAAD/AAAA/wAA
        AP+IhIH/AAAAJgAAAA2IhIH/AB3//wBZ//8AlP//AND//wD/8/8A/7f/AP9t/wD/Mv8K/wD/Rf8A/4H/
        AP+8/wD/9/8A///LAP//kAD//0UA//8KAP//ADL//wBt//8Aqf//AOT/3gD//6QA//9oAP//LAD//wAA
        AP8AAAD/AAAA/4iEgf8AAAAmAAAADYiEgf8AHf//AFn//wCU//8A0P//AP/y/wD/t/8A/3z/AP8y/wr/
        AP9F/wD/gf8A/7z/AP/4/wD//8sA//+QAP//VAD//woA//8AMf//AG3//wCo//8A4//fAP//pAD//2gA
        //8tAP//AAAA//////8AAAD/iISB/wAAACYAAAANiISB/wAe//8AWf//AJT//wDQ//8A//P/AP+3/wD/
        fP8A/0D/Cv8A/0b/AP+A/wD/vP8A//j/AP//ywD//5AA//9UAP//GQH//wAx//8Abf//AKj//wDk/98A
        //+jAP//aAD//y0A//8AAAD/AAAA/wAAAP+IhIH/AAAAJgAAAA2IhIH/AB7//wBZ//8Alf//AND//wD/
        8/8A/7j/AP98/wD/QP8A/wX/Rv8A/4H/AP+8/wD/+P8A///LAP//kAD//1QA//8ZAP//ACP//wBs//8A
        qP//AOT/3wD//6MA//9oAP//LQD//wAAAP8AAAD/AAAA/4iEgf8AAAAmAAAADYiEgf8BHf//AFn//wCV
        //8A0P//AP/z/wD/t/8A/3v/AP9A/wD/Bf82/wD/gP8A/7z/AP/4/wD//8sA//+QAf//VAD//xkA//8A
        Iv//AF7//wCp//8A5P/fAP//pAD//2gA//8tAP//AAAA/wAAAP8AAAD/iISB/wAAACYAAAANioaE9gAP
        //8AWf//AJT//wDQ//8A//P/AP+3/wD/fP8A/0H/AP8F/zf/AP9y/wD/vP8A//f/AP//ywD//5AA//9V
        AP//GQD//wAj//8AXv//AJr//wDk/98A//+jAP//aAD//ywA//8AAAD//////wAAAP+IhIH/AAAAJgAA
        AA2KhoT2AA///wBK//8Alf//AND//wD/8/8A/7f/AP97/wD/QP8A/wX/Nv8B/3L/AP+u/wD/9/8A///L
        AP//jwD//1UA//8ZAP//ACP//wBe//8Amv//ANX/3wD//6QA//9oAP//LQD//wAAAP8AAAD/AAAA/4iE
        gf8AAAAmAAAADYqGhPYAD///AEr//wCG//8A0P//AP/z/wD/t/8A/3z/AP9B/wD/Bf83/wD/cv8A/63/
        AP/p/wD//8sA//+QAP//VAD//xkA//8AI///AF7//wCa//8A1f/uAP//owD//2gA//8tAP//Dw8P/wkJ
        Cf8EBAT/iISB/wAAACYAAAANioaE9gAP//8ASv//AIb//wDB//8A//P/AP+3/wD/fP8A/0D/AP8F/zb/
        AP9y/wD/rf8A/+j/AP//2gD//48A//9UAP//GQD//wAi//8AXv//AJn//wDV/+0A//+yAP//aAD//ywA
        //8pKSn/KSkp/yYmJv+IhIH/AAAAJgAAAA2LhoT2AA///wBL//8Ahv//AMH//wD9//8A/7f/AP97/wD/
        QP8A/wX/Nv8A/3L/AP+t/wD/6f8A///aAP//ngD//1QA//8ZAP//ACP//wBe//8Amv//ANX/7gD//7IA
        //93AP//LQD//ywsLP//////Kysr/4iEgf8AAAAmAAAAC46KiPYADv//AEv//wCG//8Awf//APz//wD/
        x/8A/3z/AP9A/wD/Bf83/wD/cv8A/63/AP/p/wD//9kA//+fAP//YwD//xkA//8AI///AF7//wCa//8A
        1f/uAP//swD//3cA//88AP//LCws/ywsLP8pKSn/iISB/wAAACMAAAAGi4mH/ube2P/f19H/3tfR/97X
        0f/e19H/3tfR/97X0f/e19H/3tfR/97X0f/e19H/3tfR/97X0f/e19H/3tfR/97X0f/e19H/3tfR/97X
        0f/e19H/3tfR/97X0f+ReWj/3tfR/5F5aP/e19H/kXlo/97X0f+IhIH/AAAAFgAAAAKRjIl8iISB/4iE
        gf+IhIH/iISB/4iEgf+IhIH/iISB/4iEgf+IhIH/iISB/4iEgf+IhIH/iISB/4iEgf+IhIH/iISB/4iE
        gf+IhIH/iISB/4iEgf+IhIH/iISB/4iEgf+IhIH/iISB/4iEgf+IhIH/iISB/4uGhIEAAAAG////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A//////////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///////////////8=
</value>
  </data>
</root>